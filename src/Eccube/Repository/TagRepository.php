<?php
/*
 * This file is part of EC-CUBE
 *
 * Copyright(c) 2000-2015 LOCKON CO.,LTD. All Rights Reserved.
 *
 * http://www.lockon.co.jp/
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */


namespace Eccube\Repository;

use Eccube\Annotation\Repository;
use Eccube\Repository\AbstractRepository;
use Eccube\Entity\Tag;

/**
 * TagRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @Repository
 */
class TagRepository extends AbstractRepository
{
    
    /**
     * タグを保存する.
     *
     * @param  Tag $tag タグ
     */
    public function save($tag)
    {
        if (!$tag->getId()) {
            $RankTop = $this->findOneBy(array(), array('rank' => 'DESC'));
            $rank = 0;
            if (!is_null($RankTop)) {
                $rank = $RankTop->getRank();
            }
            
            $tag->setRank($rank + 1);
        }
        
        $em = $this->getEntityManager();
        $em->persist($tag);
        $em->flush($tag);
    }
    
    /**
     * タグ一覧を取得する.
     * 
     * @return Tag[] タグの配列
     */
    public function getList()
    {
        $qb = $this->createQueryBuilder('t')->orderBy('t.rank', 'DESC');
        return $qb->getQuery()->getResult();
    }
    
    /**
     * タグを削除する.
     *
     * @param  Tag $Tag 削除対象のタグ
     */
    public function delete($Tag)
    {
        $em = $this->getEntityManager();
        $em->beginTransaction();
        
        $em->createQuery("DELETE \Eccube\Entity\ProductTag pt WHERE pt.Tag = :tag")->execute(array("tag" => $Tag));
        
        $this
            ->createQueryBuilder('t')
            ->update()
            ->set('t.rank', 't.rank - 1')
            ->where('t.rank > :rank')
            ->setParameter('rank', $Tag->getRank())
            ->getQuery()
            ->execute();
    
        $em->remove($Tag);
        $em->flush($Tag);
        
        $em->commit();
    }
}
