<script>
    $(function() {
        var updater;

        // モーダルの表示を制御
        $('#bulkSendMail, .confirmationModal').on('click', function(e) {
            var modal = $('#sentUpdateModal');
            modal.modal();
            var eventTarget = $(e.currentTarget);
            var type = eventTarget.data('type');

            switch (type) {
                case 'mail':
                    updater = eventTarget.data('bulk-update') ? new BulkSendMail(modal, eventTarget) : new SimpleSendMail(modal, eventTarget);
                    $('#notificationMail').attr('type', 'hidden');
                    $('.notificationMail').hide();
                    $('#viewEmail').removeClass('collapse').addClass('collapsed');;
                    break;
                case 'status':
                    updater = new BulkStatusUpdate(modal, eventTarget); // bulk-update is always true
                    break;
                case 'update':
                default:
                    updater = eventTarget.data('bulk-update') ? new BulkUpdate(modal, eventTarget) : new SimpleUpdate(modal, eventTarget);
                    $('#notificationMail').attr('type', 'checkbox');
                    $('.notificationMail').show();
                    $('#viewEmail').removeClass('collapsed').addClass('collapse');
            }

            $.ajax(updater.getPreviewUrl()).done(function(res) {
                $('#viewEmail > pre').text(res);
            });

            $('.modal-title', modal).text(updater.modalTitle);
            $('.modal-body > p', modal).text(updater.modalMessage);
            $('#bulkChange')
                .attr({
                    'data-bulk-update': eventTarget.data('bulk-update'),
                    'data-type': eventTarget.data('type'),
                    'data-mark-as-shipped-url': eventTarget.data('mark-as-shipped-url'),
                    'data-notify-mail-url': eventTarget.data('notify-mail-url')
                })
                .text(updater.modalButton);
        });

        // 一括更新
        $('#bulkChange, .progressModal').on('click', function(e) {
            var eventTarget = $(e.currentTarget);
            var type = eventTarget.data('type');
            var modal = $('#sentUpdateModal');

            switch (type) {
                case 'mail':
                    updater = eventTarget.data('bulk-update') ? new BulkSendMail(modal, eventTarget) : new SimpleSendMail(modal, eventTarget);
                    break;
                case 'status':
                    if ($('#option_bulk_status').val() == '') {
                        alert('対応状況を選択してください');
                        return;
                    }
                    updater = new BulkStatusUpdate(modal, eventTarget); // bulk-update is always true
                    modal.modal();
                    break;
                case 'update':
                default:
                    updater = eventTarget.data('bulk-update') ? new BulkUpdate(modal, eventTarget) : new SimpleUpdate(modal, eventTarget);
            }

            $('.modal-title', modal).text(updater.modalTitle);
            $('.modal-body > p', modal).text("{{ 'admin.shipping.index.827'|trans }}");
            $('button', modal).hide();
            $('#bulk-options').hide();
            $('.progress', modal).show();

            updater.totalCount = updater.getTotalCount();

            var progress = new $.Deferred();
            progress.progress(function() {
                updater.progress(this, progress);
            }).fail(function() {
                updater.fail(this);
            }).always(function() {
                updater.always(this);
            });
            updater.getPromises(progress);
        });
    });

    /*
     * Super class
     */
    function ConfirmationModal(modal) {
        this.modal = modal;
        this.mailCount = 0;
        this.currentCount = 0;
        this.totalCount = 0;
    }

    ConfirmationModal.prototype = {
        modalTitle: "{{ 'admin.shipping.index.829'|trans }}",
        modalMessage: "{{ 'admin.shipping.index.830'|trans }}",
        modalButton: "{{ 'admin.shipping.index.816'|trans }}",
        getPreviewUrl: function () {
            return $('input[data-preview-notify-mail-url]:checked').data('preview-notify-mail-url');
        },
        getTotalCount: function () {
            return 1;
        },
        progress: function (result, progress) {
            $('.progress-bar', this.modal).css('width', (++this.currentCount / this.totalCount * 100) + '%');
            if (result['message']) {
                $('<li><span class="badge badge-warning">NOTICE</span> </li>')
                    .append($('<span></span>').text(result['message']))
                    .appendTo('#bulkErrors');
            }
            if (this.currentCount >= this.totalCount) {
                progress.resolve();
            }
        },
        fail: function (result) {
            $('<li><span class="badge badge-danger">ERROR</span> </li>')
                .append($('<span></span>').text("{{ 'application.text.error.system'|trans }}"))
                .appendTo('#bulkErrors');
        },
        always: function (result) {
            $('.progress', this.modal).hide();
            $('.modal-body > p', this.modal).text("{{ 'admin.shipping.index.828'|trans }}");
            $('#bulkChangeComplete').show();
        },
        getPromises: function (progress, url, data) {
            if (data == undefined) {
                data = {'notificationMail': $('input#notificationMail:checked').val()};
            }
            return $.ajax({
                'url': url,
                'type': 'PUT',
                'data': data
            })
                .fail(function () {
                    progress.reject();
                    ConfirmationModal.prototype.fail.call(this);
                })
                .always(function (data) {
                    progress.notifyWith(data);
                });
        }
    };

    /*
     * 個別更新
     */
    function SimpleUpdate(modal, relatedTarget) {
        ConfirmationModal.call(this, modal);
        this.eventTarget = relatedTarget;
    }

    // extends super class
    SimpleUpdate.prototype = Object.create(ConfirmationModal.prototype, {
        constructor: {
            value: ConfirmationModal
        },
        getPreviewUrl: {
            value: function () {
                return this.eventTarget.data('preview-notify-mail-url');
            }
        },
        getPromises: {
            value: function (progress) {
                var url = this.eventTarget.data('mark-as-shipped-url');
                return ConfirmationModal.prototype.getPromises.call(this, progress, url);
            }
        }
    });

    /*
     * 出荷一括更新(使用していない)
     */
    function BulkUpdate(modal) {
        ConfirmationModal.call(this, modal);
    }

    // extend super class
    BulkUpdate.prototype = Object.create(ConfirmationModal.prototype, {
        constructor: {
            value: ConfirmationModal
        },
        modalTitle: {
            value: '{{ 'admin.shipping.index.807'|trans }}'
        },
        modalMessage: {
            value: "{{ 'admin.shipping.index.808'|trans }}"
        },
        getTotalCount: {
            value: function () {
                return $('input[data-mark-as-shipped-url]:checked').length;
            }
        },
        getPromises: {
            value: function (progress) {
                return $('input[data-mark-as-shipped-url]:checked').map(function () {
                    var url = $(this).data('mark-as-shipped-url');
                    return ConfirmationModal.prototype.getPromises.call(this, progress, url);
                });
            }
        }
    });

    /*
     * ステータス一括更新
     */
    function BulkStatusUpdate(modal, eventTarget) {
        ConfirmationModal.call(this, modal);
        this.eventTarget = eventTarget;
    }

    // extend super class
    BulkStatusUpdate.prototype = Object.create(ConfirmationModal.prototype, {
        constructor: {
            value: ConfirmationModal
        },
        modalTitle: {
            value: '対応状況を更新します。'
        },
        modalMessage: {
            value: "{{ 'admin.shipping.index.808'|trans }}"
        },
        getTotalCount: {
            value: function () {
                return $('input[data-id]:checked').length;
            }
        },
        getPromises: {
            value: function (progress) {
                return $('input[data-id]:checked').map(function () {
                    var url = $(this).data('update-status-url');
                    var data = {'order_status': $('#option_bulk_status').val()};
                    return ConfirmationModal.prototype.getPromises.call(this, progress, url, data);
                });
            }
        }
    });

    /*
     * メール一括送信
     */
    function BulkSendMail(modal) {
        BulkUpdate.call(this, modal);
        this.notifierCompleteMessage = '';
    }

    // extend BulkUpdate
    BulkSendMail.prototype = Object.create(BulkUpdate.prototype, {
        constructor: {
            value: BulkUpdate
        },
        modalTitle: {
            value: "{{ 'admin.shipping.index.832'|trans }}"
        },
        modalMessage: {
            value: "{{ 'admin.shipping.index.833'|trans }}"
        },
        modalButton: {
            value: "{{ 'admin.shipping.index.834'|trans }}"
        },
        getTotalCount: {
            value: function () {
                return $('input[data-preview-notify-mail-url]:checked').length;
            }
        },
        progress: {
            value: function (result, progress) {
                if (result.mail) {
                    this.mailCount++;
                    this.notifierCompleteMessage = '{{ 'admin.shipping.index.837'|trans }}'.replace(/%count%/, this.mailCount);
                }
                BulkUpdate.prototype.progress.call(this, result, progress);
            }
        },
        always: {
            value: function (result) {
                BulkUpdate.prototype.always.call(this, result);
                $('.modal-body > p', this.modal).text("{{ 'admin.shipping.index.828'|trans }}" + this.notifierCompleteMessage);
            }
        },
        getPromises: {
            value: function (progress) {
                return $('input[data-notify-mail-url]:checked').map(function () {
                    var url = $(this).data('notify-mail-url');
                    return ConfirmationModal.prototype.getPromises.call(this, progress, url);
                });
            }
        }
    });

    /*
     * 個別メール送信
     */
    function SimpleSendMail(modal, relatedTarget) {
        SimpleUpdate.call(this, modal, relatedTarget);
    }

    // extends SimpleUpdate
    SimpleSendMail.prototype = Object.create(SimpleUpdate.prototype, {
        constructor: {
            value: SimpleUpdate
        },
        modalTitle: {
            value: "{{ 'admin.shipping.index.835'|trans }}"
        },
        modalMessage: {
            value: "{{ 'admin.shipping.index.836'|trans }}"
        },
        modalButton: {
            value: "{{ 'admin.shipping.index.834'|trans }}"
        },
        getPromises: {
            value: function (progress) {
                var url = this.eventTarget.data('notify-mail-url');
                return ConfirmationModal.prototype.getPromises.call(this, progress, url);
            }
        }
    });
</script>
